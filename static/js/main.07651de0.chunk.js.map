{"version":3,"sources":["reducers/index.js","reducers/venuesReducer.js","actions/types.js","reducers/participantsReducer.js","store.js","actions/index.js","components/Search.js","components/AddParticipantBtn.js","components/AddParticipantTextInput.js","components/TableHeaders.js","components/TableCells.js","components/Table.js","components/App.js","serviceWorker.js","index.js"],"names":["rootReducer","combineReducers","venues","state","arguments","length","undefined","action","type","Object","toConsumableArray","payload","participants","concat","id","name","counterVenue0","counterVenue1","counterVenue2","voted","index","middleware","composeWithDevTools","applyMiddleware","promise","thunk","createStore","fetchVenues","searchTerm","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","res","wrap","_context","prev","next","axios","get","sent","data","response","t0","stop","this","_x","apply","addParticipant","increaseParticipantVote","cleanParticipants","Search","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearchInput","bind","assertThisInitialized","handleFetchVenues","e","setState","target","value","preventDefault","_this2","react_default","createElement","className","onSubmit","htmlFor","placeholder","onChange","disabled","Component","connect","actions","AddParticipantBtn","disableAddParticipantBtn","handleAddParticipant","onClick","AddParticpantTextInput","participant","handleInputChange","TableHeaders","cleanTable","venue","winner","TableCells","mouseHover","handleMouseEnter","rowIndex","currentTarget","handleMouseLeave","activeCell","increaseVote","onMouseLeave","onMouseOver","Table","renderTableHeaders","map","components_TableHeaders","key","_this3","components_TableCells","calculateWinner","venue1","venue2","venue3","forEach","_this4","cellPadding","AddParticipantTextInput","renderTableCells","components_AddParticipantBtn","App","components_Search","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","es","store","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07651de0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport venuesReducer from './venuesReducer';\nimport participantsReducer from './participantsReducer';\n\n//books - state\nconst rootReducer = combineReducers({\n    venues: venuesReducer,\n    participants: participantsReducer\n});\n\nexport default rootReducer;","import { FETCH_VENUES } from '../actions/types'\nexport default function(state = null, action) {\n    switch(action.type) {\n        case FETCH_VENUES:\n        return [\n            ...action.payload\n            ];\n        default:\n        return state;\n    }\n}","export const FETCH_VENUES = 'FETCH_VENUES';\nexport const ADD_PARTICIPANT = 'ADD_PARTICIPANT';\nexport const INCREASE_PARTICIPANT_VOTE = 'INCREASE_PARTICIPANT_VOTE';\nexport const CLEAN_PARTICIPANTS = 'CLEAN_PARTICIPANTS';","import { ADD_PARTICIPANT, INCREASE_PARTICIPANT_VOTE, CLEAN_PARTICIPANTS } from '../actions/types';\n\nexport default function(state = [], action) {\n    switch(action.type) {\n        case ADD_PARTICIPANT:\n            const participant = {\n                id: 0,\n                name: '',\n                counterVenue0: 0,\n                counterVenue1: 0,\n                counterVenue2: 0,\n                voted: false\n            }\n            return [\n                ...state,\n               participant\n            ];\n\n         case INCREASE_PARTICIPANT_VOTE:\n            debugger;\n            const participants = [...state];\n            participants[action.payload.index][action.payload.name] = participants[action.payload.index][action.payload.name] + 1;\n            participants[action.payload.index].voted = true;\n            return participants;\n        \n        case CLEAN_PARTICIPANTS:\n             return [];\n             \n        default:\n            return state;\n    }\n}","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport promise from \"redux-promise-middleware\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from \"./reducers\";\n\nconst middleware = composeWithDevTools(applyMiddleware(promise(), thunk));\n\nexport default createStore(rootReducer, middleware);","import axios from 'axios';\nimport {ADD_PARTICIPANT, INCREASE_PARTICIPANT_VOTE, FETCH_VENUES, CLEAN_PARTICIPANTS} from './types';\n\nexport const fetchVenues = (searchTerm) => async (dispatch) => {\n    try {\n        const res = await axios.get(`https://api.foursquare.com/v2/venues/search?client_id=VHLN2OXT2Q4JKVW21ACRW4FF1YR0I50WZWQLQMKBLPN1T1J5&v=20170801&query=\n            lunch&near=${searchTerm}&client_secret=OHBZO41UXZWK1B1NEJG2JG2O52DCBSU13TIJSDVWTXXRIH5T&limit=3`)\n            dispatch({type: FETCH_VENUES, payload: res.data.response.venues});\n        } catch (err) {\n            dispatch({type: FETCH_VENUES, payload: []});\n        }\n}\n\nexport const addParticipant = () => {\n    return {\n        type: ADD_PARTICIPANT,\n        payload: null\n    }  \n}\n\nexport const increaseParticipantVote = (name, index) => {\n    debugger;\n    return {\n        type: INCREASE_PARTICIPANT_VOTE,\n        payload: {\n            name,\n            index\n        }\n    }  \n}\n\nexport const cleanParticipants = () => {\n    debugger;\n    return {\n        type: CLEAN_PARTICIPANTS,\n        payload: null\n    }  \n}\n","import React, { Component } from 'react';\nimport * as actions from '../actions'\nimport { connect } from 'react-redux';\nimport { fetchVenues } from '../actions/index';\n\nclass Search extends Component {\n    constructor(props){\n        super(props);\n        this.handleSearchInput = this.handleSearchInput.bind(this);\n        this.handleFetchVenues = this.handleFetchVenues.bind(this);\n        this.state = {\n            searchTerm: '',\n        }\n   }\n\n   handleSearchInput(e) {\n      this.setState({searchTerm: e.target.value})\n   }\n\n   handleFetchVenues(e) {\n       e.preventDefault();\n       this.props.fetchVenues(this.state.searchTerm)\n   }\n\n    render() {\n        return (\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                     <h2 className=\"headline\">Launchplace</h2>\n                     <form className=\"form-inline mb-3\" onSubmit={(e) => this.handleFetchVenues(e)}>\n                        <div className=\"form-group mb-2\">\n                            <label htmlFor=\"inputPassword2\" className=\"sr-only\">Password</label>\n                            <input type=\"text\" className=\"form-control\" id=\"search-input\" placeholder=\"Search a city\" value={this.state.searchTerm} onChange={(e) => this.handleSearchInput(e)} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary ml-3 mb-2 search-btn\" disabled={this.state.searchTerm.length < 1}>Search</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, actions)(Search);","import React from 'react';\n\nconst AddParticipantBtn = ({disableAddParticipantBtn, handleAddParticipant}) => (\n    <button className=\"btn btn-primary btn-lg add-btn\" \n    onClick={handleAddParticipant} disabled={disableAddParticipantBtn}>\n    Add Participant\n    </button>       \n);\n\nexport default AddParticipantBtn;","import React from 'react';\n\nconst AddParticpantTextInput = (props) => {\n    return (\n        <td>\n            <input type=\"text\" \n            placeholder=\"Add participant\" \n            className={props.participants[props.index].voted ? 'text-input-disabled' : ''} \n            disabled={props.participants[props.index].voted} \n            value={props.participant.name} \n            onChange={(e) => {props.handleInputChange(e, props.index)}}/></td>\n    )\n};\n\nexport default AddParticpantTextInput;","import React, { Component } from 'react';\n\nclass TableHeaders extends Component {\n    componentDidMount() {\n        this.props.cleanTable();\n    }\n    render() {\n        return(\n            <th>{this.props.venue.name}{this.props.winner === this.props.venue.name && <h4 className=\"winner\">Winner!</h4>}</th>\n        ) \n    } \n}\n\nexport default TableHeaders;","import React, { Component } from 'react';\n\nclass TableCells extends Component {\n    state = {mouseHover: false};\n\n    handleMouseEnter = (e, rowIndex) => {\n        if(!e.currentTarget.disabled) {\n            this.setState({mouseHover: true});\n        }\n        return false;\n    }\n\n    handleMouseLeave = (e) => {\n        if(!e.currentTarget.disabled){\n            this.setState({mouseHover: false});\n        }\n        return false;\n    }\n\n    render() {\n        const activeCell = this.state.mouseHover ? 'active-cell' : 'counter-venue';\n        return (\n            <td>\n                <button \n                onClick={(e) => this.props.increaseVote(e, this.props.rowIndex)}\n                onMouseLeave={(e) => this.handleMouseLeave(e)}\n                onMouseOver={(e) => this.handleMouseEnter(e)}\n                disabled={this.props.participants[this.props.rowIndex].name.length < 2 || this.props.participants[this.props.rowIndex].voted } \n                name={`counterVenue${this.props.index}`} \n                className={activeCell}></button>\n            </td>\n        ) \n    }\n}\n\nexport default TableCells;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport AddParticipantBtn from './AddParticipantBtn';\nimport AddParticpantTextInput from './AddParticipantTextInput';\nimport { increaseParticipantVote, addParticipant, cleanParticipants} from '../actions/index';\nimport TableHeaders from './TableHeaders';\nimport TableCells from './TableCells';\n\nclass Table extends Component {\n    constructor(props){\n    super(props);\n    this.renderTableHeaders = this.renderTableHeaders.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.increaseVote = this.increaseVote.bind(this);\n    this.handleAddParticipant = this.handleAddParticipant.bind(this);\n    this.cleanTable = this.cleanTable.bind(this)\n    this.state={ \n        participants: [],\n        winner:null,\n        disableAddParticipantBtn: false\n    }\n  }\n\n  cleanTable() {\n      this.props.cleanParticipants();\n      this.setState({participants: [], disableAddParticipantBtn: false, winner: null});\n  }\n\n  renderTableHeaders() {\n    return this.props.venues.map((venue, index) => {\n        return (\n            <TableHeaders \n            key={venue.id}\n            index={index} \n            venue={venue} \n            winner={this.state.winner} \n            cleanTable={this.cleanTable} \n            />\n        )\n    }) \n  }\n\n  renderTableCells(rowIndex) {\n      return this.props.venues.map((venue, index) => {\n          return (\n              <TableCells rowIndex={rowIndex} \n              index={index} \n              key={venue.id} \n              name={venue.name} \n              participants={this.props.participants} \n              increaseVote={this.increaseVote}\n              />\n          )\n      })\n  }\n\n  handleAddParticipant(){\n    this.setState({disableAddParticipantBtn : true});\n    this.props.addParticipant();\n  }\n\n  handleInputChange(e, index) {\n     let participants = [...this.props.participants];\n     participants[index].name = e.target.value;\n     this.setState({ participants })\n  }\n  \n  increaseVote(e, index) {\n    const name = e.target.name;\n    this.props.increaseParticipantVote(name, index);\n    var winner = this.calculateWinner();\n    this.setState({disableAddParticipantBtn: false, winner})\n  }\n\n  calculateWinner(){\n      var venue1 = 0;\n      var venue2 = 0;\n      var venue3 = 0;\n      this.state.participants.forEach((participant) => {\n        if(participant.counterVenue0 > 0) {\n            venue1 = ++venue1;\n        } else if(participant.counterVenue1 > 0) {\n            venue2 = ++venue2;\n        } else {\n            venue3 = ++venue3;\n        }\n      })\n\n      if(venue1 > venue2 && venue1 > venue3){\n          return this.props.venues[0].name;\n      } else if(venue2 > venue1 && venue2 > venue3){\n          return this.props.venues[1].name;\n      }  else if(venue3 > venue1 && venue3 > venue2) {\n          return this.props.venues[2].name;\n      } else if(venue1 === venue2 || venue1 === venue3 || venue2 === venue3) {\n          return null;\n      }\n  }\n\n  render(){\n    return(\n        <div className=\"row\">\n            {this.props.venues ? <div className=\"col-md-12 text-center\">\n                <div className=\"wrapper\">\n                {this.props.venues.length > 2 ? <table className=\"table-bordered\" cellPadding=\"0\">\n                    <tbody>\n                        <tr>\n                            <th>Participants</th>\n                            {this.renderTableHeaders()}\n                       </tr>\n                        {this.props.participants.length > 0 ? this.props.participants.map((participant, index) => {\n                            return (\n                                <tr key={index}>\n                                    <AddParticpantTextInput participant={participant} \n                                    handleInputChange={this.handleInputChange} \n                                    index={index} \n                                    participants={this.props.participants}\n                                    />\n\n                                    {this.renderTableCells(index)}\n                                </tr>\n                            )\n                            }) : null}\n                    </tbody>\n                </table> : <div>Venues not found</div>}           \n                {this.props.venues.length > 2 ? \n                <AddParticipantBtn disableAddParticipantBtn={this.state.disableAddParticipantBtn} handleAddParticipant={this.handleAddParticipant}/> : null}\n                </div>\n            </div> : null} \n        </div> \n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increaseParticipantVote: (name, index) => {dispatch(increaseParticipantVote(name, index))},\n    addParticipant: () => {dispatch(addParticipant())},\n    cleanParticipants: () => {dispatch(cleanParticipants())}\n  }\n}\n\nconst mapStateToProps = ({venues, participants}) => {\n    debugger;\n    return {venues, participants}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);","import React, { Component } from 'react';\nimport Search from './Search';\nimport Table from './Table';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n          <Search />\n          <Table />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}